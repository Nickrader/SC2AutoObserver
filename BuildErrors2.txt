There should be a programmatic way to do this, but I am beginner with cmake.  

Build Commands: From project root folder (i.e. ~/sc2autoobserver $) :

cmake -S . -B build -G "Visual Studio 16 2019"
start build/Observer.sln

In Visual Studio:  
#Include directories:
TestArgParser project: 
	right-click, C/C++, General -> Additional Include Directories 
    add paths "C:\Users\CoolUsername\sc2autoobserver\build\_deps\googletest-src\googlemock"
									  "C:\Users\CoolUsername\sc2autoobserver\build\_deps\googletest-src\googlemock"\include"

#Make static library								
All projects: gmock ... TestArgParser:
	right-click, C/C++, Code Generation -> RuntimeLibrary [set to: Multi-threaded Debug /MTd  (for debug) or /MT (for Release)] 
	
	Contrib: civetweb
									same as above.
									
#Build Solution:
		F7
		
Right-click project 'Observer';
click "Set as startup project"

right-click Observer again:
Properties, Configuration Properties, Debugging -> Command Arguments: here you can add the command arguments. --Path required

